#设置服务的端口
server:
  port: 8771

#eureka相关配置
eureka:
  instance:
    #服务注册中心实例的主机名
    hostname: 192.168.2.233
    #使用ip替代实例名
    #prefer-ip-address: true
    #设置实例的ID为ip:port
    #instance-id: ${eureka.instance.hostname}:${server.port}
  client:
    #明自己是一个eureka server
    #是否向服务注册中心注册自己
    register-with-eureka: false
    #是否启用获取服务注册信息,因为这是一个单点的Eureka Server，
    #不需要同步其他的Eureka Server节点的数据，故而设为false
    fetch-registry: false
    service-url:
      #和client一样指明注册的地址,只是这个由于上面的这两行配置显得特别(因为这个是eureka server)
      #注册和查询都需要依赖该地址，多个以逗号分隔
      #这里有登录验证，把用户名密码写在这地址上，不然client连接的时候会报com.netflix.discovery.shared.
      #transport.TransportException: Cannot execute request on any known server
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
  server:
    #留存的服务示例低于多少比例进入保护模式(默认0.85)
    renewal-percent-threshold: 0.5
    #false-->关闭eureka的自我保护模式--(如果注册服务的心跳在一定情况下停止,eureka会保护服务,不会去掉,会有-EMERGENCY! EUREKA MAY BE
    #INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES
    #ARE NOT BEING EXPIRED JUST TO BE SAFE.这样的错误在eureka server的那个页面)
    #关闭之后就会出现(THE SELF PRESERVATION MODE IS TURNED OFF. THIS MAY NOT PROTECT INSTANCE EXPIRY IN CASE OF NETWORK/OTHER PROBLEMS.)
    #意思是--自保存模式被关闭,在网络/其他问题时,这可能无法保护实例过期
    enable-self-preservation: true

#这里使用spring security对注册中心做一个用户名密码登录
#先做个基础的，后面再来完善安全性问题

#微服务名称,可以和项目保持一致(必要--可用于服务间访问)
spring:
  application:
    name: eureka-server
  #这里使用spring security对注册中心做一个用户名密码登录
  #先做个基础的，后面再来完善安全性问题
  security:
    basic:
      enabled: false
    user:
      name: admin
      password: 123456
